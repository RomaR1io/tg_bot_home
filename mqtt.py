import paho.mqtt.client as mqtt

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
current_temperature = None
current_humidity = None
mqtt_client = None
def on_connect(client, userdata, flags, rc):
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MQTT-–±—Ä–æ–∫–µ—Ä—É")
    client.subscribe([("sensor/temperature", 0), ("sensor/humidity", 0)])

def on_message(client, userdata, msg):
    global current_temperature, current_humidity
    try:
        value = float(msg.payload.decode())
        if msg.topic == "sensor/temperature":
            current_temperature = value
        elif msg.topic == "sensor/humidity":
            current_humidity = value
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def publish(topic: str, message: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ MQTT-—Ç–æ–ø–∏–∫"""
    if mqtt_client:
        mqtt_client.publish(topic, message)
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {topic}: {message}")
    else:
        print("‚ùå MQTT-–∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
def start_mqtt():
    global mqtt_client
    mqtt_client = mqtt.Client()
    mqtt_client.on_connect = on_connect
    mqtt_client.on_message = on_message
    mqtt_client.connect("5.189.40.94", 1883, 60)
    mqtt_client.loop_start()  # –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ä–µ–∂–∏–º